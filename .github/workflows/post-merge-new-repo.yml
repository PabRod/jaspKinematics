name: Post-Merge Repository Creation and Revert Template Branch

on:
  pull_request_target:
    types:
      - closed # Trigger when a pull request is closed (merged or not)

jobs:
  create_new_repository:
    if: ${{ github.event.pull_request.merged == true }} # Only run if the PR was merged
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all branches and commit history

      - name: Extract Package Name from DESCRIPTION
        run: |
          PACKAGE_NAME=$(grep "^Package:" DESCRIPTION | awk '{print $2}')
          if [ -z "$PACKAGE_NAME" ]; then
            echo "Error: Package name not found in DESCRIPTION" >&2
            exit 1
          fi
          echo "Package name: $PACKAGE_NAME"
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
        shell: bash

      - name: Create New Repository in Organization
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG_PAT: ${{ secrets.ORG_PAT }} # Personal Access Token with org scope
          ORG_NAME: "jasp-escience" # Replace with your actual organization name
          REPO_NAME: ${{ env.PACKAGE_NAME }}-module
        run: |
          echo "Creating repository $ORG_NAME/$REPO_NAME..."
          RESPONSE=$(curl -X POST -H "Authorization: Bearer $ORG_PAT" \
                                  -H "X-GitHub-Api-Version: 2022-11-28" \
                                  https://api.github.com/orgs/${ORG_NAME}/repos \
                                  -d "{\"name\":\"${REPO_NAME}\", \"private\": false}")

          if echo "$RESPONSE" | grep -q '"full_name"'; then
            echo "Repository created successfully: $ORG_NAME/$REPO_NAME"
            echo "NEW_REPO_URL=https://github.com/$ORG_NAME/$REPO_NAME" >> $GITHUB_ENV
          else
            echo "Failed to create repository: $RESPONSE"
            exit 1
          fi

      - name: Push Merged Code to New Repository
        run: |
          git clone "https://github.com/${{ github.repository }}.git" temp_repo
          cd temp_repo
          git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${ORG_NAME}/${{ env.PACKAGE_NAME }}.git"
          git push --mirror

  revert_template_branch:
    if: always() # Always run this job, even if the previous job fails
    runs-on: ubuntu-24.04
    needs: [create_new_repository]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git User
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Revert Template Branch to Pre-Merge State
        run: |
          MERGE_COMMIT=$(git rev-parse HEAD)
          git revert -m 1 $MERGE_COMMIT || echo "Revert failed, continuing..."
          git push origin dev/template || echo "Push failed, continuing..."

      - name: Comment on Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const comment = `The pull request was merged. A new repository [${process.env.PACKAGE_NAME}](https://github.com/${{ github.repository_owner }}/${process.env.PACKAGE_NAME}) has been created in the organization with the merged content. The template branch has been reverted.`;
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
